(()=>{"use strict";(()=>{const e=JSON.parse('{"u2":{"ja":"CDNテストプラグイン"}}').u2.ja;const t=class{constructor(t){this.launch=t=>{for(const n of t){const{enables:t=(()=>!0),events:r=["app.record.index.show"],action:o,disableMobile:i=!1}=n,c="function"==typeof r?r(this._pluginId):r,s=i?[]:c.map((e=>`mobile.${e}`)),a=n=>{try{return t(n,this._pluginId)?o(n,this._pluginId):n}catch(t){n.error=`プラグイン「${e}」の処理内でエラーが発生しました。`,console.error("エラー",t)}return n};kintone.events.on([...c,...s],a)}},this._pluginId=t}};var n=Object.defineProperty,r=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,a=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,l=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&a(e,n,t[n]);if(i)for(var n of i(t))s.call(t,n)&&a(e,n,t[n]);return e},p=(e,t)=>r(e,o(t));const u=()=>({conditions:[b()]}),b=()=>({field:""});const d={events:["mobile.app.record.edit.show"],action:(e,t)=>{return n=void 0,r=null,o=function*(){const n=(e=>{const t=kintone.plugin.app.getConfig(e);return Object.keys(t).length?Object.entries(t).reduce(((e,[t,n])=>p(l({},e),{[t]:JSON.parse(n)})),{}):u()})(t);return console.log("プラグインのリソースを、GitHub経由で実行しました！",{pluginId:t,event:e,config:n}),e},new Promise(((e,t)=>{var i=e=>{try{s(o.next(e))}catch(e){t(e)}},c=e=>{try{s(o.throw(e))}catch(e){t(e)}},s=t=>t.done?e(t.value):Promise.resolve(t.value).then(i,c);s((o=o.apply(n,r)).next())}));var n,r,o}};var h;h=kintone.$PLUGIN_ID,new t(h).launch([d])})()})();